name: Build

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    permissions: write-all
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Use Node.js 18.x
      uses: actions/setup-node@v3
      with:
        node-version: 18.x

    - name: Build
      run: |
        pip install wheel
        pip install -r plugin/requirements.txt --target=plugin/lib
        npm install
        npm run build

    - name: create changelog
      run: |
        git log --pretty=format:'%s' $(git describe --tags --abbrev=0 `git rev-list --tags --max-count=2 | tail -1`)..HEAD > CHANGELOG
        if [[ $(git diff $(git describe --tags --abbrev=0 `git rev-list --tags --max-count=2 | tail -1`) plugin/) ]]; then echo "PLUGIN_CHANGED=true" >> $GITHUB_OUTPUT; fi
        echo "IS_PRERELEASE=${{ contains(github.ref, 'pre') ||  contains(github.ref, 'beta') || contains(github.ref, 'alpha') || contains(github.ref, 'danger') }}" >> $GITHUB_OUTPUT
      id: create_changelog

    - name: Create Release
      if: ${{ steps.create_changelog.outputs.PLUGIN_CHANGED }}
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      with:
        prerelease: ${{ contains(github.ref, 'pre') ||  contains(github.ref, 'beta') || contains(github.ref, 'alpha') || contains(github.ref, 'danger') }}
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        body_path: CHANGELOG

    - name: Remove CHANGELOG
      run: rm CHANGELOG

    - name: move to directory
      if: ${{ steps.create_changelog.outputs.PLUGIN_CHANGED }}
      run: mv plugin/ Construct

    - name: zip artifacts
      if: ${{ steps.create_changelog.outputs.PLUGIN_CHANGED }}
      uses: montudor/action-zip@v1
      with:
        args: zip -qq -r Construct.zip Construct/

    - name: Upload the artifacts
      if: ${{ steps.create_changelog.outputs.PLUGIN_CHANGED }}
      uses: skx/github-action-publish-binaries@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        args: 'Construct.zip'
        releaseId: ${{steps.create_release.outputs.id}}

    - name: Publish frontend to GH Pages
      if: ${{ steps.create_changelog.outputs.IS_PRERELEASE == 'false' }}
      run: |
          git config user.name "Github Actions Bot"
          git config user.email "<>"
          git fetch
          git checkout gh-pages
          git rm main.*
          cp -R dist/* .
          git add index.html
          git add main.*
          git commit -m 'Built from ${{ github.ref }}'
          git push origin gh-pages
